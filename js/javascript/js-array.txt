//https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/array
Array.prototype.reduce(回调函数, [可选]初始值)
    对数组中的每个元素(从左到右)应用一个函数，将其减少为单个值。
    function(上次调用返回值|第一次调用函数的初始值, value, index, array) { return }
    //找到对象数组属性值的最大值
    var o = [{x: 22}, {x: 42}];
    o.map(value => value.x)
     .reduce((pre, val) => Math.max(pre, val), -Infinity)
    //所有数组项相加
    var a = [1, 2, 3, 4];
    a.reduce((acc, val) => acc + val, 0);//10
    //数组扁平化
    var b = [[0, 1], [2, 3], [4, 5]];
    b.reduce((pre, val) => pre.concat(val), []);//[0,1,2,3,4,5]
    //计算数组各值出现次数, 对象键值对
    var names = ['Alice', 'Bob', 'Tiff', 'Bruce', 'Alice'];
    names.reduce((pre, name) => {
        if(name in pre) pre[name]++;
        else pre[name] = 1;
        return pre;
    }, {}); //{ 'Alice': 2, 'Bob': 1, 'Tiff': 1, 'Bruce': 1 }
    //展开运算符(把数组各项展开)
    var friends = [ 
        { name: "Anna", books: ["Bible", "Harry Potter"], age: 21 }, 
        { name: "Bob", books: ["War and peace", "Romeo and Juliet"], age: 26 },
        { name: "Alice", books: ["The Lord of the Rings", "The Shining"], age: 18 }
    ];
    friends.reduce((pre, val) => {
        return [...pre, ...val.books];
    },["perhaps"]); // ["perhaps", "Bible", "Harry Potter", "War and peace", "Romeo and Juliet", "The Lord of the Rings", "The Shining"]
    